@page "/databasetest"
@rendermode InteractiveServer

@using STD.Data
@using STD.Components.Models

@inject UserMasterDetailService CustomerService

<h3>DataBaseTest</h3>

<h1>Customer Details</h1>
<table >
    <tr style="height: 30px; background-color:
#336699 ; color:
#FFFFFF ;border: solid 1px 
#659EC7;">
        <td colspan="5" align="left">
            Search Customer
        </td>
    </tr>
    <tr>
        <td>Cust Code:</td>
        <td>
            <input class="input-group-text" type="text" @bind-value="@login" />
        </td>
        <td>User Name:</td>
        <td>
            <input class="input-group-text" type="text" @bind-value="@password" />
        </td>
        <td>
            <input class="input-group-text" type="number" @bind-value="@wallet" />
        </td>
        <td>
            <input type="button" class="btn btn-primary" value="Search" @onclick="@searchDetails" />
        </td>
    </tr>
</table>
<hr />
@if (userDetails == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Customer Code</th>
                <th>Customer Name</th>
                <th>Email</th>
                <th>Phone No</th>
                <th>Address</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var cuDetails in userDetails)
            {
                <tr>
                    <td>@cuDetails.id</td>
                    <td>@cuDetails.login</td>
                    <td>@cuDetails.password</td>
                    <td>@cuDetails.wallet</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    String login = "";
    String password = "";
    decimal wallet = 1;
    private UserMaster[]? userDetails;
    protected override async Task OnInitializedAsync()
    {
        userDetails = await CustomerService.GetCustDetails(login, password);
    }
    //SearchCustomer
    async Task searchDetails()
    {
        userDetails = await CustomerService.GetCustDetails(login, password);
    }
}
